
Requirements:
------------
Make sure to have 'Asfermi' installed on your system and 'asfermi.exe' is in your PATH variable. 
('asfermi.EXE' will run on linux ;-) )
If you don't have asfermi installed, you can get it at http://code.google.com/p/asfermi/

Important Files:
---------------
1) tool.sh : The script you need to run!
	     This script will take in arguments: <num repetitions> <output.cubin>
             The 'numRepetitions' is the number of times, the block of instruction mentioned in 'stub-template', will be repeated in the final assembly
	     This script will generate the 'output.cubin' file.
 	One can run '$ cuobjdump -sass output.cubin' to verify the assembly.
	     
2) stub-template (To be modified by user): This is the template containing instructions to be timed.
		Manually change the instructions in this file and they will be inserted in the final assembly file.
		Also the set of instructions mentioned in this file, will be repeated 'numRepetions' times in the final assembly

3) microbm_main.cu : The CUDA code will actually run the 'cubin' genereated from 'tool.sh' on GPU. This contains driver API calls to load the 'cubin' generated from Asfermi and launch it.
		     To compile this code, use 'compile_microbm_cu.sh'
		     This program takes args: <cubinName> <kernelName> <numThreads(default=1)>
		     The program prints a table with following columns:
		     ThreadID | Time taken| Start Time | End Time | Result (for debugging purposes)

4) asm: File containing the assembly kernel and placeholder for instructions to be timed. This file need not be changed.

4) stub and asm-final : Intermediate files generated by script. Not to be modified by user.


Example Usage:
----------------------------------------------------------------------------------
$ ./tool.sh 10 out.cubin
$ ./compile_microbm_cu.sh 
$ microbm_main out.cubin k 32

