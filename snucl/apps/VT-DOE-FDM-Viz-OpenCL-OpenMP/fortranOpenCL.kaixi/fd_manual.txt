! Written by Pengcheng Liu
! Copyright (c) 2005 by Pengcheng Liu
!
This document provides a brief introduction for runnig the code disfd.f90 and read_dfd.f90.
 
Coordinate system:
   The codes included in this document use the Cartesian coordinate system to define the location of a point. The X-aixs, Y-Axis, and Z-axis positive orientation follow the right hand rule with Z positive DOWN.

Reference point:
  When preparing the input paramters required by the finite difference (FD) simulation, you can use different Cartesian coordinate systems to describe the FD model, the receiver locations, the earth velocity structure, or the seismic source models. One coordinate system can be changed to other systme by allow a rotation about the Z-axis and the x, y translation. However you have to choose a reference point which should be the same for all the coordinate system (the physical location of the reference point cannot change).
  
Units:
  time                     = s (seconds) 
  Length, Width, and Depth = m
  Displacement             = m
  velocity (or speed)      = m/s
  Acceleration             = m/s^2
  Density                  = kg/m^3
  Seismic moment           = N-m

===========================================================================
                 Input file required by disfd.f90:
===========================================================================

1. disfd.inp
   The name of this file is fixed in the disfd.f90. Following is an example of disfd.inp:

fd_nort.inf
40.0,  1
0.0
0.0  0.0
3  3
12   0.01
fd_north.mat
source_model.list
station_rock.list
fd_nort.vel

in which:
Line 1:  fd_nort.inf
 name of file to store the information
Line 2:  40.0,  1
 computing duration (sec) and the decimation factor for output (integer)'
Line 3:  0.0
 angle (degree) from North to X-Axis of FD coordinate system
Line 4:  0.0  0.0
 (x,y) value of the reference point in the FD coordinate system
Line 5:  3  3
 numbers of processors used in X, Y directions of FD zone, respectively.
 In this example, the FD model is divided into 9 sub-models wiht 3 sub-models in X-axis and 3 sub-models in y-axis. Each of the nine CPUs (or processors) will do the computation for one sub-model.
Line 6:  12   0.01
 nodes number of PML zone in Region II (>10) and the coefficient (0.1-0.01) controlled 
 the refelction from the artifical boundary. the larger the PML zone is set,
 the smaller the coefficient can be.
Line 7:  fd_north.mat
 name of file with velocity structure (One output file of vm4dfd_v3.f90)
Line 8:  source_model.list
 name of file listing the source file names
Line 9:  station_rock.list
 name of the file with receiver locations
Line 10: fd_nort.vel
 name of file to output the FD computed Velocities


2. fd_north.mat
 This file (binary) was generated by code vm4dfd_v3.f90
 The file name used here should be the same as the output file name of
 vm4dfd_v3.f90.


3. source_model.list
 A example of this file shown below: 

  1  512  512
 -27000.00  -20000.0  0.00
NR_sources.001

In which:
line 1:   1  512  512
 The number of source files to be listed in this file, the number of point sources number 
 in strike and dip direction, respectively.
Line 2:   -27000.00  -20000.0  0.00
 (x, y) value of the given reference point in the coordinate system used for
 describing the point source locations; the angle from North to the X-axis 
 of this coordinate system
line 3: NR_sources.001
 The name of the file with first source model parameters
line 4: (if any)
 The name of the file with second source model parameters
....

4. NR_sources.001
 
line 1:  
 is_moment (should be 1 always), #-of-point-sources, id-of-source-type
line 2:
 first-point-source's xs,ys,zs,moment,rptm,rist,sp2,strike,dip,rake
 secon-point-source's xs,ys,zs,moment,rptm,rist,sp2,strike,dip,rake
 .................

where:
 xs,ys,zs: the coordinates in the source coordinate system  
 moment:   the moment of each point source
 rptm:     the rupture starting time (second)  of this point source;
 rist:     the rise-time (second) of this point source;
 sp2:      another parameter for describing the source function (if needed);
 strike, dip, rake: the angles (degree) of faulting strike, dip, and rake.


5 station_rock.list
 This file provides the information on the receivers (outputting locations).
 There are two options to provide this information.

option 1:, if recv_type (see following) =1
Line 1:
   nr_all,xref_stn,yref_stn,afa_stn,recv_type
Line 2:
   first-receiver's-name
line 3: 
   x, y, z of first receiver (meters)
Line 4:
   second-receiver's-name
line 5: 
   x, y, z of second receiver (meters)
.......
.......

where:
 nr_all = # of receivers
 xref_stn, yref_stn:  the (x, y) value of the given reference point 
 in the coordinate system used for describing the location of receivers
 afa_stn: the angle from North to the X-axis of this coordinate system
 recv_type: should be 1 in this case.

 
option 2:, if recv_type (see following) =2
Line 1:
   nr_block,xref_stn,yref_stn,afa_stn,recv_type
Line 2:  block_1:  a string
 block_1
Line 3:
   xr_start, xr_end, dxr (in x-direction of first block) 
line 4: 
   yr_start, yr_end, dyr (in y-direction of first block) 
Line 5:
   zr_start, zr_end, dzr (in z-direction of first block) 
Line 7:  block_1 is a string
 block_2
Line 7:
   xr_start, xr_end, dxr (in x-direction of second block) 
line 8: 
   yr_start, yr_end, dyr (in y-direction of second block) 
Line 9:
   zr_start, zr_end, dzr (in z-direction of second block) 
.......
.......

Where:
 nr_block: the number of blocks within which the velocities will be output
 xref_stn, yref_stn:  not used in this option but need providing
 afa_stn:  not used
 recv_type: should be 2 in this case.

==========================================================================
       Output files from disfd.f90
==========================================================================

1. fd_nort.inf
  The name of this file was set in the file "disfd.inp".
  This file contains some basic information on FD calculation.

2. FD_output_file_list
 follwing is a example of this file 

2 2 2
 The output file names of FD simulation using source model  1
fd_nort.vel.005.001
fd_nort.vel.008.001
 The output file names of FD simulation using source model  2
fd_nort.vel.005.002
fd_nort.vel.008.002

 The number of processor = 9
        0        0        0        0     3024
        0        0       12        0

 The first line in the file is 
    num_fout, num_src_model, recv_type
num_fout: the number of files with outputting velocity for each source model.
num_src_model: the number of source models used
recv_type:  option number for receivers

3. fd_nort.vel.yyy.xxx
  fd_nort.vel.yyy.xxx is a binary file, where,
  the 'yyy' is the id of the processor from which the velocities 
  were output;
  the 'xxx' is the id of the source file.
  
  The string 'fd_nort.vel' was set in the file 'disfd.inp'.



===========================================================================
                 Input file required by read_dfd.f90:

This code re-arranges the computted velocities from disfd.f90
===========================================================================
 dt_new
 fc_hp, fc_lp
 id_format
 fblock 

line 1:  the new time step of velocities
line 2:  the corner frequencies of high- and low-pass
line 3:  if id_format=1, the outputing is in SAC format;  
                     =2, the outputing is in ASCII format; 
                     =3, the outputing is in Binary format 
  Note: this parameter will affect the output format ONLY 
        when recv_type is set to 1 in the file 'station_rock.list'

line 4: the name of file to store a block output
  Note: rhis name will be used ONLY when recv_type=2


===========================================================================
                 Output from read_dfd.f90:

===========================================================================
Opition One ( recv_type = 1 )

 The velocities computted for each given station will be stored in three files:
   station_name_'fdx'.xxx  for X-component velocities 
   station_name_'fdx'.xxx  for Y-component velocities
   station_name_'fdx'.xxx  for Z-component velocities (vertical)
 where xxx is the id # of source file.  
 The format of these files depends on the number of id_format

Opition Two ( recv_type = 2 )
 The velocities computted for each given Block store in one or two binary files(Upper region and/or Bottom region)

Each file:
line 1: nrbx,nrby,nrbz,nt0,dt
 The # of receivers in X, Y, and Z directions, respectively; the # of time points; time step.

line 2: ((xr(i), yr(i), zr(i)), i=1,nr_all)
  the coordinates (xr, yr, zr) for all the receivers included in this file.

line it+2: ((vx(i), vy(i), vz(i)), i=1,nr_all)
  the three component velocities (vx, vy, vz) for all the receivers included in this file.
  where 'it' is time-step number
     

